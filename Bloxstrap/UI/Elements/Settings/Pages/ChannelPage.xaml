<ui:UiPage x:Class="Hellstrap.UI.Elements.Settings.Pages.ChannelPage"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
           xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
           xmlns:local="clr-namespace:Hellstrap.UI.Elements.Settings.Pages"
           xmlns:controls="clr-namespace:Hellstrap.UI.Elements.Controls"
           xmlns:models="clr-namespace:Hellstrap.UI.ViewModels.Settings"
           xmlns:resources="clr-namespace:Hellstrap.Resources"
           d:DataContext="{d:DesignInstance Type=models:ChannelViewModel}"
           mc:Ignorable="d" 
           d:DesignHeight="600" d:DesignWidth="800"
           Title="ChannelPage"
           Scrollable="True">

    <!-- Main StackPanel for content structure -->
    <StackPanel Margin="0,0,14,14">

        <!-- Channel Description Section -->
        <TextBlock Margin="0,0,0,8" 
                   Text="{x:Static resources:Strings.Menu_Channel_Description}" 
                   FontSize="14" 
                   Foreground="{StaticResource TextFillColorSecondaryBrush}" />

        <!-- Hellstrap Settings Section -->
        <TextBlock Text="Hellstrap" FontSize="16" FontWeight="Medium" Margin="0,16,0,0" />

        <controls:OptionControl Header="Disable Hardware Acceleration"
                                Description="Hellstrap will consume more resources if this option is unchecked.">
            <ui:ToggleSwitch IsChecked="{Binding HWAsselEnabled, Mode=TwoWay}" />
        </controls:OptionControl>

        <!-- Auto Update Toggle -->
        <controls:OptionControl Header="{x:Static resources:Strings.Menu_Behaviour_AutoUpdate_Title}"
                                Description="{x:Static resources:Strings.Menu_Behaviour_AutoUpdate_Description}">
            <ui:ToggleSwitch IsChecked="{Binding UpdateCheckingEnabled, Mode=TwoWay}" />
        </controls:OptionControl>






        <!-- Roblox Settings Section -->
        <TextBlock Text="Roblox" FontSize="16" FontWeight="Medium" Margin="0,16,0,0" />

        <!-- Force Roblox Reinstallation -->
        <controls:OptionControl Header="{x:Static resources:Strings.Menu_Behaviour_ForceRobloxReinstall_Title}"
                                Description="{x:Static resources:Strings.Menu_Behaviour_ForceRobloxReinstall_Description}">
            <controls:OptionControl.Style>
                <Style TargetType="controls:OptionControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ForceRobloxReinstallation, Mode=OneTime}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:OptionControl.Style>
            <ui:ToggleSwitch IsChecked="{Binding ForceRobloxReinstallation, Mode=TwoWay}" />
        </controls:OptionControl>

        <!-- Roblox Updates Toggle -->
        <controls:OptionControl Header="Roblox updates"
                        Description="When disabled, Roblox won't update to newer versions. (This feature is currently in **beta**)">
            <controls:OptionControl.Style>
                <Style TargetType="controls:OptionControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ForceRobloxReinstallation, Mode=OneTime}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:OptionControl.Style>
            <ui:ToggleSwitch IsChecked="{Binding UpdateRoblox, Mode=TwoWay}" />
        </controls:OptionControl>




        <ui:CardExpander Margin="0,8,0,0">
            <ui:CardExpander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Left Side (Channel Header and Description) -->
                    <StackPanel Grid.Column="0" VerticalAlignment="Center" Margin="0,0,12,0">
                        <TextBlock FontSize="14" Text="Channels" />
                        <TextBlock FontSize="12" 
                                   Text="Choose deployment channel." 
                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}" 
                                   TextWrapping="Wrap" />
                    </StackPanel>

                    <!-- Right Side (ComboBox for Channel Selection) -->
                    <ComboBox Grid.Column="1" Margin="8,0,8,0" Padding="10,5,10,5" Width="200" 
          SelectedValue="{Binding ViewChannel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=115}"
          SelectedValuePath="Content">
                        <ComboBoxItem Content="production"/>
                        <ComboBoxItem Content="live" />
                        <ComboBoxItem Content="zlive" />
                    </ComboBox>


                </Grid>
            </ui:CardExpander.Header>

            <!-- Expanded Area with Additional Text -->
            <ui:CardExpander.Content>
                <StackPanel Margin="12,8">
                    <!-- Introductory Text Block -->
                    <TextBlock FontSize="12" Text="Select a channel to change the current stream setting. Choose from Production, Live, or Zlive based on your requirements." 
               Foreground="{DynamicResource TextFillColorSecondaryBrush}" TextWrapping="Wrap" />
                    <TextBlock FontSize="12" FontWeight="Bold" Text="Channel Explanations:" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Height="18" Margin="0,10,0,0" />

                    <!-- Channel Explanations Section -->

                    <TextBlock Margin="0,5,0,0" FontSize="12" Text="Production: This is the main channel where your final, stable versions of the game are deployed. Use this for public releases and official versions of Roblox." 
               Foreground="{DynamicResource TextFillColorSecondaryBrush}" TextWrapping="Wrap" />

                    <TextBlock Margin="0,5,0,0" FontSize="12" Text="Live: This channel is used for live game testing, often with a larger user base. It allows you to test features in a near-real environment, but not as stable as production." 
               Foreground="{DynamicResource TextFillColorSecondaryBrush}" TextWrapping="Wrap" />

                    <TextBlock Margin="0,5,0,0" FontSize="12" Text="Zlive: This is a special live channel typically used for experimental or special events. It might be used for events or content that isn't yet ready for broader use." 
               Foreground="{DynamicResource TextFillColorSecondaryBrush}" TextWrapping="Wrap" />
                </StackPanel>
            </ui:CardExpander.Content>
        </ui:CardExpander>















        <!-- Data Export Section -->
        <ui:CardExpander Margin="0,8,0,0">
            <ui:CardExpander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock FontSize="14" Text="{x:Static resources:Strings.Menu_Hellstrap_ExportData_Title}" />
                        <TextBlock FontSize="12" 
                                   Text="{x:Static resources:Strings.Menu_Hellstrap_ExportData_Description}" 
                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}" 
                                   TextWrapping="Wrap" />
                    </StackPanel>

                    <!-- Export Button -->
                    <ui:Button Grid.Column="1" MinWidth="100" Margin="0,0,16,0" 
                               Icon="CopySelect20" 
                               Content="{x:Static resources:Strings.Common_Export}" 
                               Command="{Binding ExportDataCommand}">
                        <ui:Button.Style>
                            <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ShouldExportConfig, Path=IsChecked}" Value="False" />
                                            <Condition Binding="{Binding ElementName=ShouldExportLogs, Path=IsChecked}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="True" />
                            </Style>
                        </ui:Button.Style>
                    </ui:Button>
                </Grid>
            </ui:CardExpander.Header>

            <!-- Export Checkboxes -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Name="ShouldExportConfig" 
                          Content="{x:Static resources:Strings.Menu_Hellstrap_ExportData_ExportConfig}" 
                          IsChecked="{Binding ShouldExportConfig}" />

                <CheckBox Grid.Column="1" Name="ShouldExportLogs" 
                          Content="{x:Static resources:Strings.Menu_Hellstrap_ExportData_ExportLogs}" 
                          IsChecked="{Binding ShouldExportLogs}" />
            </Grid>
        </ui:CardExpander>
    </StackPanel>
</ui:UiPage>
